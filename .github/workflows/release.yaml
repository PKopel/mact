name: Release

on:
  # Trigger the workflow on the new 'v*' tag created
  workflow_dispatch:
  push:
    tags:
      - "v*"

env:
  GO_VERSION: "1.21"

jobs:
  build:
    outputs:
      hash-linux-amd64: ${{ steps.hash.outputs.hash-lin-amd }}
      hash-linux-arm64: ${{ steps.hash.outputs.hash-lin-arm }}
      hash-macos-amd64: ${{ steps.hash.outputs.hash-mac-amd }}
      hash-macos-arm64: ${{ steps.hash.outputs.hash-mac-arm }}
      hash-windows-amd64: ${{ steps.hash.outputs.hash-win-amd }}
      hash-windows-arm64: ${{ steps.hash.outputs.hash-win-arm }}
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            os-names: ["linux", "darwin", "windows"]
            archs: ["arm64", "amd64" ]

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build binary
        run: |
          make build-all VERSION=${{ github.ref_name }}

      - name: Generate hashes
        id: hash
        run: |
          # sha256sum generates sha256 hash for all artifacts.
          # base64 -w0 encodes to base64 and outputs on a single line.
          # sha256sum artifact1 artifact2 ... | base64 -w0
          echo "hash-lin-amd=$(sha256sum bin/mact-${{ github.ref_name }}-linux-amd64 | base64 -w0)" >> $GITHUB_OUTPUT
          echo "hash-lin-arm=$(sha256sum bin/mact-${{ github.ref_name }}-linux-arm64 | base64 -w0)" >> $GITHUB_OUTPUT
          echo "hash-mac-amd=$(sha256sum bin/mact-${{ github.ref_name }}-darwin-amd64 | base64 -w0)" >> $GITHUB_OUTPUT
          echo "hash-mac-arm=$(sha256sum bin/mact-${{ github.ref_name }}-darwin-arm64 | base64 -w0)" >> $GITHUB_OUTPUT
          echo "hash-win-amd=$(sha256sum bin/mact-${{ github.ref_name }}-windows-amd64.exe | base64 -w0)" >> $GITHUB_OUTPUT
          echo "hash-win-arm=$(sha256sum bin/mact-${{ github.ref_name }}-windows-arm64.exe | base64 -w0)" >> $GITHUB_OUTPUT

      - name: Upload binary
        uses: actions/upload-artifact@v4.0.0
        with:
          name: binaries
          path: bin/*
          if-no-files-found: error
          retention-days: 5

  provenance:
    needs: [build]
    strategy:
      matrix:
        hash: [hash-linux, hash-macos, hash-windows]
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.9.0
    with:
      base64-subjects: "${{ needs.build.outputs[matrix.hash] }}"
      upload-assets: ${{ startsWith(github.ref, 'refs/tags/') }} # Optional: Upload to a new release
      continue-on-error: true

  release:
    needs: [build, provenance]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download linux binaries
        uses: actions/download-artifact@v4.1.0
        with:
          name: binaries

      - name: Upload assets
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: |
            mact-${{ github.ref_name }}-linux-amd64
            mact-${{ github.ref_name }}-linux-arm64
            mact-${{ github.ref_name }}-darwin-amd64
            mact-${{ github.ref_name }}-darwin-arm64
            mact-${{ github.ref_name }}-windows-amd64.exe
            mact-${{ github.ref_name }}-windows-arm64.exe
